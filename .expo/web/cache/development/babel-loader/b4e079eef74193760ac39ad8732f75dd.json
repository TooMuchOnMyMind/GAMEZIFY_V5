{"ast":null,"code":"import { createServer } from \"node:http\";\nimport { join } from \"node:path\";\nimport { hostname } from \"node:os\";\nimport wisp from \"wisp-server-node\";\nimport Fastify from \"fastify\";\nimport fastifyStatic from \"@fastify/static\";\nimport { publicPath } from \"ultraviolet-static\";\nimport { uvPath } from \"@titaniumnetwork-dev/ultraviolet\";\nimport { epoxyPath } from \"@mercuryworkshop/epoxy-transport\";\nimport { baremuxPath } from \"@mercuryworkshop/bare-mux/node\";\nconst fastify = Fastify({\n  serverFactory: handler => {\n    return createServer().on(\"request\", (req, res) => {\n      res.setHeader(\"Cross-Origin-Opener-Policy\", \"same-origin\");\n      res.setHeader(\"Cross-Origin-Embedder-Policy\", \"require-corp\");\n      handler(req, res);\n    }).on(\"upgrade\", (req, socket, head) => {\n      if (req.url.endsWith(\"/wisp/\")) wisp.routeRequest(req, socket, head);else socket.end();\n    });\n  }\n});\nfastify.register(fastifyStatic, {\n  root: publicPath,\n  decorateReply: true\n});\nfastify.get(\"/uv/uv.config.js\", (req, res) => {\n  return res.sendFile(\"uv/uv.config.js\", publicPath);\n});\nfastify.register(fastifyStatic, {\n  root: uvPath,\n  prefix: \"/uv/\",\n  decorateReply: false\n});\nfastify.register(fastifyStatic, {\n  root: epoxyPath,\n  prefix: \"/epoxy/\",\n  decorateReply: false\n});\nfastify.register(fastifyStatic, {\n  root: baremuxPath,\n  prefix: \"/baremux/\",\n  decorateReply: false\n});\nfastify.server.on(\"listening\", () => {\n  const address = fastify.server.address();\n  console.log(\"Listening on:\");\n  console.log(`\\thttp://localhost:${address.port}`);\n  console.log(`\\thttp://${hostname()}:${address.port}`);\n  console.log(`\\thttp://${address.family === \"IPv6\" ? `[${address.address}]` : address.address}:${address.port}`);\n});\nprocess.on(\"SIGINT\", shutdown);\nprocess.on(\"SIGTERM\", shutdown);\nfunction shutdown() {\n  console.log(\"SIGTERM signal received: closing HTTP server\");\n  fastify.close();\n  process.exit(0);\n}\nlet port = parseInt(process.env.PORT || \"\");\nif (isNaN(port)) port = 8080;\nfastify.listen({\n  port: port,\n  host: \"0.0.0.0\"\n});","map":{"version":3,"names":["createServer","join","hostname","wisp","Fastify","fastifyStatic","publicPath","uvPath","epoxyPath","baremuxPath","fastify","serverFactory","handler","on","req","res","setHeader","socket","head","url","endsWith","routeRequest","end","register","root","decorateReply","get","sendFile","prefix","server","address","console","log","port","family","process","shutdown","close","exit","parseInt","env","PORT","isNaN","listen","host"],"sources":["C:/Harshad Workspace/GAMEZIFY_V5/src/index.js"],"sourcesContent":["import { createServer } from \"node:http\";\r\nimport { join } from \"node:path\";\r\nimport { hostname } from \"node:os\";\r\nimport wisp from \"wisp-server-node\";\r\nimport Fastify from \"fastify\";\r\nimport fastifyStatic from \"@fastify/static\";\r\n\r\n// static paths\r\nimport { publicPath } from \"ultraviolet-static\";\r\nimport { uvPath } from \"@titaniumnetwork-dev/ultraviolet\";\r\nimport { epoxyPath } from \"@mercuryworkshop/epoxy-transport\";\r\nimport { baremuxPath } from \"@mercuryworkshop/bare-mux/node\";\r\n\r\nconst fastify = Fastify({\r\n\tserverFactory: (handler) => {\r\n\t\treturn createServer()\r\n\t\t\t.on(\"request\", (req, res) => {\r\n\t\t\t\tres.setHeader(\"Cross-Origin-Opener-Policy\", \"same-origin\");\r\n\t\t\t\tres.setHeader(\"Cross-Origin-Embedder-Policy\", \"require-corp\");\r\n\t\t\t\thandler(req, res);\r\n\t\t\t})\r\n\t\t\t.on(\"upgrade\", (req, socket, head) => {\r\n\t\t\t\tif (req.url.endsWith(\"/wisp/\")) wisp.routeRequest(req, socket, head);\r\n\t\t\t\telse socket.end();\r\n\t\t\t});\r\n\t},\r\n});\r\n\r\nfastify.register(fastifyStatic, {\r\n\troot: publicPath,\r\n\tdecorateReply: true,\r\n});\r\n\r\nfastify.get(\"/uv/uv.config.js\", (req, res) => {\r\n\treturn res.sendFile(\"uv/uv.config.js\", publicPath);\r\n});\r\n\r\nfastify.register(fastifyStatic, {\r\n\troot: uvPath,\r\n\tprefix: \"/uv/\",\r\n\tdecorateReply: false,\r\n});\r\n\r\nfastify.register(fastifyStatic, {\r\n\troot: epoxyPath,\r\n\tprefix: \"/epoxy/\",\r\n\tdecorateReply: false,\r\n});\r\n\r\nfastify.register(fastifyStatic, {\r\n\troot: baremuxPath,\r\n\tprefix: \"/baremux/\",\r\n\tdecorateReply: false,\r\n});\r\n\r\nfastify.server.on(\"listening\", () => {\r\n\tconst address = fastify.server.address();\r\n\r\n\t// by default we are listening on 0.0.0.0 (every interface)\r\n\t// we just need to list a few\r\n\tconsole.log(\"Listening on:\");\r\n\tconsole.log(`\\thttp://localhost:${address.port}`);\r\n\tconsole.log(`\\thttp://${hostname()}:${address.port}`);\r\n\tconsole.log(\r\n\t\t`\\thttp://${\r\n\t\t\taddress.family === \"IPv6\" ? `[${address.address}]` : address.address\r\n\t\t}:${address.port}`\r\n\t);\r\n});\r\n\r\nprocess.on(\"SIGINT\", shutdown);\r\nprocess.on(\"SIGTERM\", shutdown);\r\n\r\nfunction shutdown() {\r\n\tconsole.log(\"SIGTERM signal received: closing HTTP server\");\r\n\tfastify.close();\r\n\tprocess.exit(0);\r\n}\r\n\r\nlet port = parseInt(process.env.PORT || \"\");\r\n\r\nif (isNaN(port)) port = 8080;\r\n\r\nfastify.listen({\r\n\tport: port,\r\n\thost: \"0.0.0.0\",\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module"}